{"mappings":"AAAA,IAAI,iBAAiB,OAAO,WAAW;AACvC,IAAI,gBAAgB,iBAAiB;AACrC,IAAI;AACJ,IAAI;AACJ,IAAI,SAAS,SAAS,cAAc,CAAC;AACrC,OAAO,gBAAgB,CACrB,QACA,CAAC,QAAU;IACT,cAAc,SAAS,cAAc,CAAC;IACtC,WAAW,SAAS,gBAAgB,CAAC;IAErC;AACF,GACA,KAAK;AAGP,SAAS,iBAAiB;IACxB,IAAI;IAEJ,IAAI,UAAU;QACZ,MAAM,IAAI;QACV,YAAY;QACZ,WAAW;IACb;IAEA,WAAW,IAAI,qBAAqB,iBAAiB;IACrD,SAAS,OAAO,CAAC;IACjB,SAAS,OAAO,CAAC,CAAC,UAAY;QAC5B,SAAS,OAAO,CAAC;IACnB;AACF;AAEA,SAAS,qBAAqB;IAC5B,IAAI,aAAa,EAAE;IACnB,IAAI,WAAW;IAEf,IAAK,IAAI,IAAI,KAAK,KAAK,UAAU,IAAK;QACpC,IAAI,QAAQ,IAAI;QAChB,WAAW,IAAI,CAAC;IAClB;IAEA,WAAW,IAAI,CAAC;IAChB,OAAO;AACT;AAEA,SAAS,gBAAgB,OAAO,EAAE,QAAQ,EAAE;IAC1C,QAAQ,OAAO,CAAC,CAAC,QAAU;QACzB,IAAI,MAAM,cAAc,IAAI,MAAM,kBAAkB,CAAC,CAAC,GAAG,GAAG;YAC1D,MAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;YAC3B;YACA;QACA,eAAe;QACjB,OACE,MAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;IAElC;AACF;AAEA,SAAS,kBAAkB;IACzB,IAAI,CAAC,YAAY,SAAS,CAAC,QAAQ,CAAC,mBAClC,OAAO,SAAS,CAAC,GAAG,CAAC;SAErB,OAAO,SAAS,CAAC,MAAM,CAAC;AAE5B;AAEA,SAAS,aAAa;IACpB,MAAM,WAAW,SAAS,gBAAgB,CAAC;IAC3C,SAAS,OAAO,CAAC,CAAC,OAAS;QACzB,IAAI,WAAW,KAAK,YAAY,CAAC;QACjC,IAAI,WAAW,SAAS,KAAK,CAAC,GAAG,SAAS,MAAM;QAChD,IAAI,UAAU,SAAS,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC;QACnD,IAAI,QAAQ,SAAS,CAAC,QAAQ,CAAC,mBAC7B,KAAK,SAAS,CAAC,GAAG,CAAC;aAEnB,KAAK,SAAS,CAAC,MAAM,CAAC;IAE1B;AACF,EAEA,0BAA0B;CAC1B,iEAAiE;CACjE,6DAA6D;CAC7D,8BAA8B;CAC9B,IAAI","sources":["src/intersection-observer.js"],"sourcesContent":["let viewportHeight = window.innerHeight\r\nlet triggerHeight = viewportHeight / 4\r\nlet heroSection\r\nlet sections\r\nlet navBar = document.getElementById(\"nav\")\r\nwindow.addEventListener(\r\n  \"load\",\r\n  (event) => {\r\n    heroSection = document.getElementById(\"top\")\r\n    sections = document.querySelectorAll(\"section\")\r\n\r\n    createObserver()\r\n  },\r\n  false\r\n)\r\n\r\nfunction createObserver() {\r\n  let observer\r\n\r\n  let options = {\r\n    root: null,\r\n    rootMargin: \"0px\",\r\n    threshold: buildThresholdList(),\r\n  }\r\n\r\n  observer = new IntersectionObserver(handleIntersect, options)\r\n  observer.observe(heroSection)\r\n  sections.forEach((section) => {\r\n    observer.observe(section)\r\n  })\r\n}\r\n\r\nfunction buildThresholdList() {\r\n  let thresholds = []\r\n  let numSteps = 5\r\n\r\n  for (let i = 1.0; i <= numSteps; i++) {\r\n    let ratio = i / numSteps\r\n    thresholds.push(ratio)\r\n  }\r\n\r\n  thresholds.push(0)\r\n  return thresholds\r\n}\r\n\r\nfunction handleIntersect(entries, observer) {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting && entry.boundingClientRect.y < 0) {\r\n      entry.target.classList.add(\"active-section\")\r\n      toggleStickyNav()\r\n      activeLink()\r\n      // lastActive()\r\n    } else {\r\n      entry.target.classList.remove(\"active-section\")\r\n    }\r\n  })\r\n}\r\n\r\nfunction toggleStickyNav() {\r\n  if (!heroSection.classList.contains(\"active-section\")) {\r\n    navBar.classList.add(\"fixed-nav\")\r\n  } else {\r\n    navBar.classList.remove(\"fixed-nav\")\r\n  }\r\n}\r\n\r\nfunction activeLink() {\r\n  const navLinks = document.querySelectorAll(\".nav-link\")\r\n  navLinks.forEach((link) => {\r\n    let linkHref = link.getAttribute(\"href\")\r\n    let idSearch = linkHref.slice(1, linkHref.length)\r\n    let section = document.getElementById(`${idSearch}`)\r\n    if (section.classList.contains(\"active-section\")) {\r\n      link.classList.add(\"active-link\")\r\n    } else {\r\n      link.classList.remove(\"active-link\")\r\n    }\r\n  })\r\n}\r\n\r\n// function lastActive() {\r\n//   const actives = document.querySelectorAll(\".active-section\")\r\n//   const activesArray = Array.prototype.slice.call(actives)\r\n//   console.log(activesArray)\r\n// }\r\n"],"names":[],"version":3,"file":"index.2fe6c3af.js.map","sourceRoot":"/__parcel_source_root/"}