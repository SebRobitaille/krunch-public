{"mappings":"AAAqBA,OAAOC,YAA5B,IAEIC,EACAC,EACAC,EAASC,SAASC,eAAe,OA4BrC,SAASC,IACP,IAAIC,EAAa,GAGjB,IAAK,IAAIC,EAAI,EAAKA,GAFH,EAEkBA,IAAK,CACpC,IAAIC,EAAQD,EAHC,EAIbD,EAAWG,KAAKD,EAClB,CAGA,OADAF,EAAWG,KAAK,GACTH,CACT,CAEA,SAASI,EAAgBC,EAASC,GAChCD,EAAQE,SAASC,IACXA,EAAMC,gBAAkBD,EAAME,mBAAmBC,EAAI,GACvDH,EAAMI,OAAOC,UAAUC,IAAI,kBAW1BpB,EAAYmB,UAAUE,SAAS,kBAGlCnB,EAAOiB,UAAUG,OAAO,aAFxBpB,EAAOiB,UAAUC,IAAI,aAONjB,SAASoB,iBAAiB,aAClCV,SAASW,IAChB,IAAIC,EAAWD,EAAKE,aAAa,QAC7BC,EAAWF,EAASG,MAAM,EAAGH,EAASI,QAC5B1B,SAASC,eAAe,GAAGuB,KAC7BR,UAAUE,SAAS,kBAC7BG,EAAKL,UAAUC,IAAI,eAEnBI,EAAKL,UAAUG,OAAO,mBAtBtBR,EAAMI,OAAOC,UAAUG,OAAO,oBAGpC,CAnDAxB,OAAOgC,iBACL,QACCC,IACC/B,EAAcG,SAASC,eAAe,OACtCH,EAAWE,SAASoB,iBAAiB,WAOzC,WACE,IAAIX,EAEAoB,EAAU,CACZC,KAAM,KACNC,WAAY,MACZC,UAAW9B,KAGbO,EAAW,IAAIwB,qBAAqB1B,EAAiBsB,GACrDpB,EAASyB,QAAQrC,GACjBC,EAASY,SAASyB,IAChB1B,EAASyB,QAAQC,EAAA,GAErB,CAnBIC,EAAA,IAEF","sources":["src/intersection-observer.js"],"sourcesContent":["let viewportHeight = window.innerHeight\r\nlet triggerHeight = viewportHeight / 4\r\nlet heroSection\r\nlet sections\r\nlet navBar = document.getElementById(\"nav\")\r\nwindow.addEventListener(\r\n  \"load\",\r\n  (event) => {\r\n    heroSection = document.getElementById(\"top\")\r\n    sections = document.querySelectorAll(\"section\")\r\n\r\n    createObserver()\r\n  },\r\n  false\r\n)\r\n\r\nfunction createObserver() {\r\n  let observer\r\n\r\n  let options = {\r\n    root: null,\r\n    rootMargin: \"0px\",\r\n    threshold: buildThresholdList(),\r\n  }\r\n\r\n  observer = new IntersectionObserver(handleIntersect, options)\r\n  observer.observe(heroSection)\r\n  sections.forEach((section) => {\r\n    observer.observe(section)\r\n  })\r\n}\r\n\r\nfunction buildThresholdList() {\r\n  let thresholds = []\r\n  let numSteps = 5\r\n\r\n  for (let i = 1.0; i <= numSteps; i++) {\r\n    let ratio = i / numSteps\r\n    thresholds.push(ratio)\r\n  }\r\n\r\n  thresholds.push(0)\r\n  return thresholds\r\n}\r\n\r\nfunction handleIntersect(entries, observer) {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting && entry.boundingClientRect.y < 0) {\r\n      entry.target.classList.add(\"active-section\")\r\n      toggleStickyNav()\r\n      activeLink()\r\n      // lastActive()\r\n    } else {\r\n      entry.target.classList.remove(\"active-section\")\r\n    }\r\n  })\r\n}\r\n\r\nfunction toggleStickyNav() {\r\n  if (!heroSection.classList.contains(\"active-section\")) {\r\n    navBar.classList.add(\"fixed-nav\")\r\n  } else {\r\n    navBar.classList.remove(\"fixed-nav\")\r\n  }\r\n}\r\n\r\nfunction activeLink() {\r\n  const navLinks = document.querySelectorAll(\".nav-link\")\r\n  navLinks.forEach((link) => {\r\n    let linkHref = link.getAttribute(\"href\")\r\n    let idSearch = linkHref.slice(1, linkHref.length)\r\n    let section = document.getElementById(`${idSearch}`)\r\n    if (section.classList.contains(\"active-section\")) {\r\n      link.classList.add(\"active-link\")\r\n    } else {\r\n      link.classList.remove(\"active-link\")\r\n    }\r\n  })\r\n}\r\n\r\n// function lastActive() {\r\n//   const actives = document.querySelectorAll(\".active-section\")\r\n//   const activesArray = Array.prototype.slice.call(actives)\r\n//   console.log(activesArray)\r\n// }\r\n"],"names":["window","innerHeight","$5e7cd92e387d3e9f$var$heroSection","$5e7cd92e387d3e9f$var$sections","$5e7cd92e387d3e9f$var$navBar","document","getElementById","$5e7cd92e387d3e9f$var$buildThresholdList","thresholds","i","ratio","push","$5e7cd92e387d3e9f$var$handleIntersect","entries","observer","forEach","entry","isIntersecting","boundingClientRect","y","target","classList","add","contains","remove","querySelectorAll","link","linkHref","getAttribute","idSearch","slice","length","addEventListener","event","options","root","rootMargin","threshold","IntersectionObserver","observe","section","$5e7cd92e387d3e9f$var$createObserver"],"version":3,"file":"index.155fcf1c.js.map"}